{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","helpers/variables.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","handleSelectedTodo","className","map","todo","id","title","completed","isSelected","cn","type","onClick","TodoFilter","query","handleQuery","resetQuery","selectFilterChange","handleSelectFilter","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","ERROR_MESSAGE","TodoModal","useState","selectedUser","setSelectedUser","isStatusLoaded","setisStatusLoaded","useEffect","userId","user","catch","finally","href","email","name","App","setTodos","setQuery","setselectFilterChange","setSelectedTodo","visibleTodos","optionChange","getNewTodos","filter","preparedTitle","trim","toLowerCase","preparedQuery","includes","getPreparedTodos","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd45e616.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  handleSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  handleSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n          //\n          const isSelected = id === selectedTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': isSelected,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    handleSelectedTodo(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={cn('far', {\n                      'fa-eye': !isSelected,\n                      'fa-eye-slash': isSelected,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  query: string,\n  handleQuery: (event: React.ChangeEvent<HTMLInputElement>) => void\n  resetQuery: () => void,\n  selectFilterChange: string,\n  handleSelectFilter: (event: React.ChangeEvent<HTMLSelectElement>) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  handleQuery = () => { },\n  resetQuery = () => { },\n  selectFilterChange,\n  handleSelectFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectFilterChange}\n            onChange={handleSelectFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable no-console */\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const ERROR_MESSAGE = 'Invalid data';\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { ERROR_MESSAGE } from '../../helpers/variables';\n\ntype Props = {\n  selectedTodo: Todo,\n  handleSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isStatusLoaded, setisStatusLoaded] = useState(false);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then((user) => setSelectedUser(user))\n      .catch(() => ERROR_MESSAGE)\n      .finally(() => setisStatusLoaded(true));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isStatusLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => handleSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { ERROR_MESSAGE } from './helpers/variables';\n\nfunction getPreparedTodos(\n  todos: Todo[],\n  query: string,\n  optionChange: string,\n): Todo[] {\n  let getNewTodos = [...todos];\n\n  getNewTodos = getNewTodos.filter(todo => {\n    switch (optionChange) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  if (query) {\n    getNewTodos = getNewTodos.filter(({ title }) => {\n      const preparedTitle = title.trim().toLowerCase();\n      const preparedQuery = query.trim().toLowerCase();\n\n      return preparedTitle.includes(preparedQuery);\n    });\n  }\n\n  return getNewTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectFilterChange, setselectFilterChange] = useState('all');\n  const [isStatusLoaded, setisStatusLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleSelectedTodo = (todo: Todo | null) => setSelectedTodo(todo);\n\n  const handleSelectFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setselectFilterChange(event.target.value);\n  };\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  const visibleTodos = getPreparedTodos(todos, query, selectFilterChange);\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch(() => ERROR_MESSAGE)\n      .finally(() => setisStatusLoaded(true));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleQuery={handleQuery}\n                resetQuery={resetQuery}\n                selectFilterChange={selectFilterChange}\n                handleSelectFilter={handleSelectFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isStatusLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    selectedTodo={selectedTodo}\n                    todos={visibleTodos}\n                    handleSelectedTodo={handleSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            handleSelectedTodo={handleSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}